{"version":3,"file":"collab.js","sources":["../src/collab.js"],"sourcesContent":["import {Plugin, PluginKey, TextSelection} from \"prosemirror-state\"\n\nclass Rebaseable {\n  constructor(step, inverted, origin) {\n    this.step = step\n    this.inverted = inverted\n    this.origin = origin\n  }\n}\n\n// : ([Rebaseable], [Step], Transform) → [Rebaseable]\n// Undo a given set of steps, apply a set of other steps, and then\n// redo them.\nexport function rebaseSteps(steps, over, transform) {\n  for (let i = steps.length - 1; i >= 0; i--) transform.step(steps[i].inverted)\n  for (let i = 0; i < over.length; i++) transform.step(over[i])\n  let result = []\n  for (let i = 0, mapFrom = steps.length; i < steps.length; i++) {\n    let mapped = steps[i].step.map(transform.mapping.slice(mapFrom))\n    mapFrom--\n    if (mapped && !transform.maybeStep(mapped).failed) {\n      transform.mapping.setMirror(mapFrom, transform.steps.length - 1)\n      result.push(new Rebaseable(mapped, mapped.invert(transform.docs[transform.docs.length - 1]), steps[i].origin))\n    }\n  }\n  return result\n}\n\n// This state field accumulates changes that have to be sent to the\n// central authority in the collaborating group and makes it possible\n// to integrate changes made by peers into our local document. It is\n// defined by the plugin, and will be available as the `collab` field\n// in the resulting editor state.\nclass CollabState {\n  constructor(version, unconfirmed) {\n    // : number\n    // The version number of the last update received from the central\n    // authority. Starts at 0 or the value of the `version` property\n    // in the option object, for the editor's value when the option\n    // was enabled.\n    this.version = version\n\n    // : [Rebaseable]\n    // The local steps that havent been successfully sent to the\n    // server yet.\n    this.unconfirmed = unconfirmed\n  }\n}\n\nfunction unconfirmedFrom(transform) {\n  let result = []\n  for (let i = 0; i < transform.steps.length; i++)\n    result.push(new Rebaseable(transform.steps[i],\n                               transform.steps[i].invert(transform.docs[i]),\n                               transform))\n  return result\n}\n\nconst collabKey = new PluginKey(\"collab\")\n\n// :: (?Object) → Plugin\n//\n// Creates a plugin that enables the collaborative editing framework\n// for the editor.\n//\n//   config::- An optional set of options\n//\n//     version:: ?number\n//     The starting version number of the collaborative editing.\n//     Defaults to 0.\n//\n//     clientID:: ?union<number, string>\n//     This client's ID, used to distinguish its changes from those of\n//     other clients. Defaults to a random 32-bit number.\nexport function collab(config = {}) {\n  config = {version: config.version || 0,\n            clientID: config.clientID == null ? Math.floor(Math.random() * 0xFFFFFFFF) : config.clientID}\n\n  return new Plugin({\n    key: collabKey,\n\n    state: {\n      init: () => new CollabState(config.version, []),\n      apply(tr, collab) {\n        let newState = tr.getMeta(collabKey)\n        if (newState)\n          return newState\n        if (tr.docChanged)\n          return new CollabState(collab.version, collab.unconfirmed.concat(unconfirmedFrom(tr)))\n        return collab\n      }\n    },\n\n    config,\n    // This is used to notify the history plugin to not merge steps,\n    // so that the history can be rebased.\n    historyPreserveItems: true\n  })\n}\n\n// :: (state: EditorState, steps: [Step], clientIDs: [union<number, string>], options: ?Object) → Transaction\n// Create a transaction that represents a set of new steps received from\n// the authority. Applying this transaction moves the state forward to\n// adjust to the authority's view of the document.\n//\n//   options::- Additional options.\n//\n//     mapSelectionBackward:: ?boolean\n//     When enabled (the default is `false`), if the current selection\n//     is a [text selection](#state.TextSelection), its sides are\n//     mapped with a negative bias for this transaction, so that\n//     content inserted at the cursor ends up after the cursor. Users\n//     usually prefer this, but it isn't done by default for reasons\n//     of backwards compatibility.\nexport function receiveTransaction(state, steps, clientIDs, options) {\n  // Pushes a set of steps (received from the central authority) into\n  // the editor state (which should have the collab plugin enabled).\n  // Will recognize its own changes, and confirm unconfirmed steps as\n  // appropriate. Remaining unconfirmed steps will be rebased over\n  // remote steps.\n  let collabState = collabKey.getState(state)\n  let version = collabState.version + steps.length\n  let ourID = collabKey.get(state).spec.config.clientID\n\n  // Find out which prefix of the steps originated with us\n  let ours = 0\n  while (ours < clientIDs.length && clientIDs[ours] == ourID) ++ours\n  let unconfirmed = collabState.unconfirmed.slice(ours)\n  steps = ours ? steps.slice(ours) : steps\n\n  // If all steps originated with us, we're done.\n  if (!steps.length)\n    return state.tr.setMeta(collabKey, new CollabState(version, unconfirmed))\n\n  let nUnconfirmed = unconfirmed.length\n  let tr = state.tr\n  if (nUnconfirmed) {\n    unconfirmed = rebaseSteps(unconfirmed, steps, tr)\n  } else {\n    for (let i = 0; i < steps.length; i++) tr.step(steps[i])\n    unconfirmed = []\n  }\n\n  let newCollabState = new CollabState(version, unconfirmed)\n  if (options && options.mapSelectionBackward && state.selection instanceof TextSelection) {\n    tr.setSelection(TextSelection.between(tr.doc.resolve(tr.mapping.map(state.selection.anchor, -1)),\n                                          tr.doc.resolve(tr.mapping.map(state.selection.head, -1)), -1))\n    tr.updated &= ~1\n  }\n  return tr.setMeta(\"rebased\", nUnconfirmed).setMeta(\"addToHistory\", false).setMeta(collabKey, newCollabState)\n}\n\n// :: (state: EditorState) → ?{version: number, steps: [Step], clientID: union<number, string>, origins: [Transaction]}\n// Provides data describing the editor's unconfirmed steps, which need\n// to be sent to the central authority. Returns null when there is\n// nothing to send.\n//\n// `origins` holds the _original_ transactions that produced each\n// steps. This can be useful for looking up time stamps and other\n// metadata for the steps, but note that the steps may have been\n// rebased, whereas the origin transactions are still the old,\n// unchanged objects.\nexport function sendableSteps(state) {\n  let collabState = collabKey.getState(state)\n  if (collabState.unconfirmed.length == 0) return null\n  return {\n    version: collabState.version,\n    steps: collabState.unconfirmed.map(s => s.step),\n    clientID: collabKey.get(state).spec.config.clientID,\n    get origins() { return this._origins || (this._origins = collabState.unconfirmed.map(s => s.origin)) }\n  }\n}\n\n// :: (EditorState) → number\n// Get the version up to which the collab plugin has synced with the\n// central authority.\nexport function getVersion(state) {\n  return collabKey.getState(state).version\n}\n"],"names":["let","i","const","PluginKey","Plugin","TextSelection"],"mappings":"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"}